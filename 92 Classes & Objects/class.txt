OOPS - Object Oriented Programming System 🧑‍💻
OOPS is a paradigm (procedure)/(process) which is based on Object  
Object - real world entity 🌍

System / environment -> object 

- Why we need OOPS ❓
    - Object is a collection of data (property) and behavior 
    - Student:
        - student ki age - property 🏷️
        - student wake up early - behavior ⏰

OOPS - procedure / model 
    - it is one of the way 

A --------- B 
    cycle🚲, bike🏍️, car🚗, jeep🚙
    bike - is one of the way to travel from A to B 

OOPS vs Functional Programming ⚔️

=> Functional Programming
    - data (property) and method (behavior) are separated 
    - hard to manage 😓

=> OOPS 
    - collection of data and behavior: who holds this? Object
    - easy to manage 😃
    - reusability 🔁
    - efficiency ⚡
    - security 🔒

= OOPS - 4 pillars 🏛️

class & object 

in JS - everything is object 

- Literal Object

let person = {
    name: "shivam",
    age: 21,
    gender: 'M',
    getSurname() {
        return "garade"
    }
}
console.log(person.getSurname()); // garade
console.log(person); // { name: 'shivam', age: 21, getSurname: [Function: getSurname] }

Agar mujhe 2 object banane hai toh is object ko copy karke changes karne padege - 
agar 20 object huye toh 20 baar likhunga and 50 huye toh 50 baar 
yaha par redundancy (duplicacy) 🔁

50 - Home 🏠
50 - Blueprint 📄

1000 - student 👨‍🎓
1000 - form 📝
    - 1 baar form design hoga (Blueprint) 📄
    - 1000 students tak form pahuchaunga (thousand objects) 👨‍🎓📝

Hum banayenge class - behave like Blueprint - no real world entity -> no space occupied in memory
class - set of instructions

object -> real world entity - which occupies space in memory
home - Blueprint - jeeta jagta ghar hoga 🏠

constructor -> is a special type of method which initializes/creates object in the memory

$$$ -> let Animal = function(username, age, gender) {
    this.username = username,
    this.age = age,
    this.gender = gender
    // yaha par this yane current calling object yane jo object new karke call kar rahe uska .jobhi uske liye
}

let student1 = new Animal("ravi", 15, "male");
let student2 = new Animal("sara", 14, "female");
let student3 = new Animal("john", 16, "male");
let student4 = new Animal("anita", 15, "female");
let student5 = new Animal("mike", 17, "male");
let student6 = new Animal("lisa", 16, "female");

console.log(student3);

- ES6 -> class and objects
no class 


